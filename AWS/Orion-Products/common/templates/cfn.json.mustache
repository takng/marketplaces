{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"This template installs SolarWinds {{defaultFull}} ({{defaultUpper}}). **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
   "Parameters":{
      "Password":{
         "Type":"String",
         "Description":"The password will be used for the Orion Web Console admin user. Minimum 10 characters and must contain characters from three of the following categories: alphabetic characters, numbers (0-9), and non-alphanumeric characters (@,!, $, #, %, etc.) except of ' (single quote).",
         "NoEcho":"true",
         "MinLength":"10",
         "AllowedPattern":"^(((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[A-Z])(?=.*[~`!@#$%^&*()_\\-+=\\[\\{\\]\\}\\\\|;:\",<.>\/?]))|((?=.*[a-z])(?=.*[0-9])(?=.*[~`!#@$%^&*()_\\-+=\\[\\{\\]\\}\\\\|;:\",<.>\/?]))|((?=.*[A-Z])(?=.*[0-9])(?=.*[~`!@#$%^&*()_\\-+=\\[\\{\\]\\}\\\\|;:\",<.>\/?])))[\\w~`!@#$%^&*()_\\-+=\\[\\{\\]\\}\\\\|;:\",<.>\/?]{10,50}$",
         "ConstraintDescription":"Your password must be at least 10 characters in length. Maximum password length 50 characters. Your password must contain characters from three of the following categories: alphabetic characters, numbers (0-9), and non-alphanumeric characters (!, $, #, %, etc.) except of ' (single quote)."
      },
      {{#allProducts}}
      "{{nameUpper}}Product": {
         "Type": "String",
         {{#isDefault}}
         "Default": "Yes",
         "AllowedValues": [
            "Yes"
         ]
         {{/isDefault}}
         {{^isDefault}}
         "Default": "Select an option...",
         "AllowedValues": [
           "Select an option...",
           "Yes",
           "No"
         ]
         {{/isDefault}}
       },
      {{/allProducts}}
      "KeyName":{
         "Description":"The EC2 Key Pair used to access EC2 instance. Please create a new Key Pair in the AWS Console if no entry is found in the dropdown.",
         "Type":"AWS::EC2::KeyPair::KeyName",
         "AllowedPattern":".+",
         "ConstraintDescription":"Please select an existing EC2 Key Pair from the dropdown."
      },
      "EC2InstanceTypeParameter":{
         "Description":"Recommended size: m5.xlarge - 4 vCPUs, 16 GB Memory",
         "Type":"String",
         "Default":"m5.xlarge",
         "AllowedValues":[
            "m5.large",
            "m5.xlarge",
            "m5.2xlarge",
            "m5d.2xlarge"
         ]
      },
      "WindowOSTypeParameter":{
         "Type":"String",
         "Default":"Windows Server 2019 Datacenter",
         "AllowedValues":[
            "Windows Server 2019 Datacenter",
            "Windows Server 2016 Datacenter"
         ]
      },
      "ServerAccesslocation":{
         "Description":"IP address '0.0.0.0/0' allows everyone to access this EC2 instance. Please enter a valid IP address range in CIDR notation to limit the range of IP addresses that can access this EC2 instance.",
         "Type":"String",
         "MinLength":"9",
         "MaxLength":"18",
         "AllowedPattern":"^(([1-9]|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])(\\.(\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])){3}\/(3[0-2]|[1-2]\\d|\\d))$|^(0\\.0\\.0\\.0\/0)$",
         "ConstraintDescription":"Must be a valid IP address range in CIDR notation (e.g. '0.0.0.0/0', '192.168.1.1/32', ...)."
      },
      "VolumeParameterType":{
         "Type":"String",
         "Default":"gp2 (General purpose SSD volume that balances price and performance for a wide variety of workloads)",
         "AllowedValues":[
            "gp2 (General purpose SSD volume that balances price and performance for a wide variety of workloads)",
            "io1 (Highest performance SSD volume for mission-critical, low latency or high throughput workloads)"
         ]
      },
      "VolumeSize":{
         "Type":"String",
         "Default":"250",
         "AllowedValues":[
            "250",
            "500",
            "750",
            "1000"
         ]
      },
      "VPCID":{
         "Description":"Stack will be created in the selected VPC. To launch stack in a new VPC, please create a new VPC first.",
         "AllowedPattern":"vpc-[\\w\\d]+",
         "Type":"AWS::EC2::VPC::Id",
         "ConstraintDescription":"Please select VPC ID from the dropdown."
      },
      "Subnet":{
         "AllowedPattern":"subnet-[\\w\\d]+",
         "Description": "Please select a subnet for EC2 instance.",
         "Type":"AWS::EC2::Subnet::Id",
         "ConstraintDescription":"Please select a subnet for EC2 instance from the dropdown."
      },
      "DatabaseSubnets": {
         "AllowedPattern":"subnet-[\\w\\d]+",
         "Description": "The selected VPC should contain at least 2 subnets in a different availablity zones. This is not required in case of an existing database server instance.",
         "Type": "List<AWS::EC2::Subnet::Id>",
         "ConstraintDescription":"Please select at least 2 subnets from the dropdown."
       },
      "SupportScalability":{
         "Description":"Any Additional Polling Engine (APE) or Additional Web Server (AWS) which can be deployed on-premises or in the cloud. Running on a separate server that extends the monitoring capacity of your SolarWinds installation.",
         "Type":"String",
         "Default":"No",
         "AllowedValues":[
            "No",
            "Yes (This will enable TCP ports 1801, 5671 and 17777 by default)"
         ]
      },
      "ScalabilityAccessLocation":{
         "Description":"Please set CIDR to 0.0.0.0/0 to allow all IP addresses to access EC2 scalability ports, x.x.x.x/32 to allow one specific IP address, or another CIDR range. This field is only required if 'Support Orion Scalability Engine' field value is set to 'Yes'.",
         "Type":"String"
      },
      "DBInstallationTypeParameter":{
         "Type":"String",
         "Default":"Option 1: Create a new database",
         "Description": "Orion will create a 'db.m4.large' Microsoft SQL Server database which is recommended for most evaluations. Upgrading the database server may be done at any time through the AWS Console and does not require any changes to Orion.",
         "AllowedValues":[
            "Option 1: Create a new database",
            "Option 2: Use an existing database"
         ]
      },
      "AllocatedStorage":{
         "Type":"String",
         "Default":"250",
         "AllowedValues":[
            "250",
            "500",
            "1000"
         ]
      },
      "DBServerNameParameter":{
         "Type":"String",
         "NoEcho":"false",
         "Default":"Please enter a Fully Qualified Domain Name (FQDN) of SQL Server",
         "Description":"Database Server Name is not required for 'Create a new database' option. For 'Use an existing database' option, provide a Fully Qualified Domain Name (FQDN) of SQL Server."
      },
      "DBNameParameter":{
         "Type":"String",
         "Description":"Only letters (a-z, A-Z), numbers (0-9), '-' and '_' characters are allowed.",
         "NoEcho":"false",
         "AllowedPattern":"^[A-Za-z0-9_-]+$",
         "MinLength":"1",
         "MaxLength":"128",
         "ConstraintDescription":"The Database Name cannot be empty. Only letters (a-z, A-Z) and numbers (0-9) are allowed."
      },
      "DBUserName":{
         "Type":"String",
         "Description":"First character must be a letter. Only letters (a-z, A-Z) and numbers (0-9) are allowed.",
         "NoEcho":"true",
         "AllowedPattern":"^[a-zA-Z][a-zA-Z0-9]*$",
         "MinLength":"3",
         "MaxLength":"79",
         "ConstraintDescription":"Provide 3 to 79 alphanumeric characters. First character must be a letter. Only letters (a-z, A-Z) and numbers (0-9) are allowed."
      },
      "DBPassword":{
         "Type":"String",
         "Description":"Minimum 8 characters. Your password must contain characters from three of the following categories: English uppercase letters, English lowercase letters, numbers (0-9), and non-alphanumeric characters (!, $, #, %, etc.) except of: @ (at sign), / (slash), ' (single quote), and \" (double quote).",
         "NoEcho":"true",
         "MinLength":"8",
         "MaxLength":"128",
         "AllowedPattern":"^(((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[A-Z])(?=.*[~`!#$%^&*()_\\-+=\\[\\{\\]\\}\\\\|;:,<.>?]))|((?=.*[a-z])(?=.*[0-9])(?=.*[~`!#$%^&*()_\\-+=\\[\\{\\]\\}\\\\|;:,<.>?]))|((?=.*[A-Z])(?=.*[0-9])(?=.*[~`!#$%^&*()_\\-+=\\[\\{\\]\\}\\\\|;:,<.>?])))[\\w~`!#$%^&*()_\\-+=\\[\\{\\]\\}\\\\|;:,<.>?]{8,128}$",
         "ConstraintDescription":"Your password must be at least 8 characters in length. Your password must contain characters from three of the following categories: English uppercase letters, English lowercase letters, numbers (0-9), and non-alphanumeric characters (!, $, #, %, etc.) except of: @ (at sign), / (slash), ' (single quote), and \" (double quote)."
      }
   },
   "Metadata":{
      "AWS::CloudFormation::Interface":{
         "ParameterGroups":[
            {
               "Label":{
                  "default":"Basic Settings"
               },
               "Parameters":[
                  "Password"
               ]
            },
            {
               "Label":{
                  "default":"Default Product"
               },
               "Parameters":[
                  "{{defaultUpper}}Product"
               ]
            },
            {{^isEOC}}
            {
               "Label":{
                  "default":"Additional Orion Products"
               },
               "Parameters":[
                  {{#otherProducts}}
                  "{{nameUpper}}Product"{{^last}},{{/last}}
                  {{/otherProducts}}
               ]
            },
            {{/isEOC}}
            {
               "Label":{
                  "default":"Infrastructure Provisioning"
               },
               "Parameters":[
                  "KeyName",
                  "EC2InstanceTypeParameter",
                  "WindowOSTypeParameter",
                  "ServerAccesslocation",
                  "VolumeParameterType",
                  "VolumeSize"
               ]
            },
            {
               "Label":{
                  "default":"Network Settings"
               },
               "Parameters":[
                  "Subnet",
                  "DatabaseSubnets",
                  "VPCID"
               ]
            },
            {
               "Label":{
                  "default":"Orion Installation"
               },
               "Parameters":[
                  "SupportScalability",
                  "ScalabilityAccessLocation"
               ]
            },
            {
               "Label":{
                  "default":"Configure Database Settings"
               },
               "Parameters":[
                  "DBInstallationTypeParameter"
               ]
            },
            {
               "Parameters":[
                  "AllocatedStorage",
                  "DBServerNameParameter",
                  "DBNameParameter",
                  "DBUserName",
                  "DBPassword"
               ]
            }
         ],
         "ParameterLabels":{
             "Password":{
                "default":"Password *"
             },
             {{#allProducts}}
             "{{nameUpper}}Product": {
               "default": "Install {{nameFull}} ({{nameUpper}})?"
             },
             {{/allProducts}}           
            "KeyName":{
               "default":"EC2 Key Pair *"
            },
            "EC2InstanceTypeParameter":{
               "default":"EC2 Instance *"
            },
            "WindowOSTypeParameter":{
               "default":"Operating System *"
            },
            "ServerAccesslocation":{
               "default":"EC2 IP Address Range *"
            },
            "VolumeParameterType":{
               "default":"Volume Type *"
            },
            "VolumeSize":{
               "default":"Hard Disk Space (GB) *"
            },
            "VPCID":{
               "default":"Select VPC *"
            },
            "Subnet":{
               "default":"Select Subnet *"
            },
            "DatabaseSubnets" :{
             "default":"Select Database Subnet *"
            },
            "SupportScalability":{
               "default":"Support Orion Scalability Engine? *"
            },
            "ScalabilityAccessLocation":{
               "default":"Orion Scalability Engine IP Address Range"
            },
            "DBInstallationTypeParameter":{
               "default":"Choose Database Type *"
            },

            "AllocatedStorage":{
               "default":"Allocated Database Storage (GB)"
            },

            "DBServerNameParameter":{
               "default":"Database Server Name"
            },
            "DBNameParameter":{
               "default":"Database Name *"
            },
            "DBUserName":{
               "default":"Master Database Username *"
            },
            "DBPassword":{
               "default":"Master Database Password *"
            }
         }
      }
   },
   "Resources":{
      "NonScalableSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Condition": "ScalabilityNotRequired", 
            "Properties":{
            "GroupDescription":"RDP",
            "VpcId":{
               "Ref":"VPCID"
            },
            "SecurityGroupIngress":[
               {
                  "Description":"RDP",
                  "IpProtocol":"tcp",
                  "FromPort":3389,
                  "ToPort":3389,
                  "CidrIp":{
                     "Ref":"ServerAccesslocation"
                  }
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":443,
                  "ToPort":443,
                  "CidrIp":"0.0.0.0/0"
               }
            ],
            "SecurityGroupEgress": [
               {
                   "IpProtocol": "-1",
                   "CidrIp": "0.0.0.0/0"
               }
           ],
            "Tags" : [
               {
                  "Key" : "Name", 
                  "Value" : { 
                     "Fn::Join" : ["", [
                        { "Ref": "AWS::StackName"}, 
                        "NonScalableSecurityGroup" ]]
                  } 
               }
           ]
         }
      },
      "EC2ScalabilitySecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
           "Condition": "isScalabilityRequired",
         "Properties":{
            "GroupDescription":"RDP, HTTP, HTTPS, ICMP",
            "VpcId":{
               "Ref":"VPCID"
            },
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "FromPort":3389,
                  "ToPort":3389,
                  "CidrIp":{
                     "Ref":"ServerAccesslocation"
                  }
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":1801,
                  "ToPort":1801,
                  "CidrIp":{
                     "Ref":"ScalabilityAccessLocation"
                  }
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":5671,
                  "ToPort":5671,
                  "CidrIp":{
                     "Ref":"ScalabilityAccessLocation"
                  }
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":17777,
                  "ToPort":17777,
                  "CidrIp":{
                     "Ref":"ScalabilityAccessLocation"
                  }
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":443,
                  "ToPort":443,
                  "CidrIp":"0.0.0.0/0"
               }
            ],
            "SecurityGroupEgress": [
               {
                   "IpProtocol": "-1",
                   "CidrIp": "0.0.0.0/0"
               }
           ],
            "Tags" : [
               {
                  "Key" : "Name", 
                  "Value" : { 
                     "Fn::Join" : ["", [
                        { "Ref": "AWS::StackName"}, 
                        "EC2ScalabilitySecurityGroup" ]]
                  } 
               }
           ]
         }
      },
      "EC2Instance":{
         "Type":"AWS::EC2::Instance",
         "CreationPolicy":{
            "ResourceSignal":{
               "Timeout":"PT1H30M",
               "Count":1
            }
         },
         "Metadata":{
            "AWS::CloudFormation::Init":{
               "configSets":{
                  "config":[
                     "installDotnetInstaller"
                  ]
               },
               "installDotnetInstaller":{
                  "files":{
                     "c:\\cfn\\cfn-hup.conf":{
                        "content":{
                           "Fn::Join":[
                              "",
                              [
                                 "[main]\n",
                                 "stack=",
                                 {
                                    "Ref":"AWS::StackName"
                                 },
                                 "\n",
                                 "region=",
                                 {
                                    "Ref":"AWS::Region"
                                 },
                                 "\n"
                              ]
                           ]
                        }
                     },
                     "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf":{
                        "content":{
                           "Fn::Join":[
                              "",
                              [
                                 "[cfn-auto-reloader-hook]\n",
                                 "triggers=post.update\n",
                                 "path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init\n",
                                 "action=cfn-init.exe -v -c config -s ",
                                 {
                                    "Ref":"AWS::StackId"
                                 },
                                 " -r EC2Instance",
                                 " --region ",
                                 {
                                    "Ref":"AWS::Region"
                                 },
                                 "\n"
                              ]
                           ]
                        }
                     }
                  },
                  "services":{
                     "windows":{
                        "cfn-hup":{
                           "enabled":"true",
                           "ensureRunning":"true",
                           "files":[
                              "c:\\cfn\\cfn-hup.conf",
                              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                           ]
                        }
                     }
                  },
                  "commands":{
                     "update-silent-config-and-install-orion":{
                       "command":{
                          "Fn::Join":[
                             "",
                             [
                                "powershell.exe -ExecutionPolicy RemoteSigned C:\\cfn\\artifacts\\Populate-silent-config-file.ps1 ",
                                {{#isRc}}
                                "-installerParameter /ProductStage=RC ",
                                {{/isRc}}
                                "-templateParameters @{",
                                "dbServerName = ",
                                "'",
                                {
                                   "Fn::If":[
                                      "isExistingDatabase",
                                      {
                                         "Ref":"DBServerNameParameter"
                                      },
                                      {
                                         "Fn::GetAtt":[
                                            "SolarWindsDatabase",
                                            "Endpoint.Address"
                                         ]
                                      }
                                   ]
                                },
                                "'",
                                "; databaseName = ",
                                "'",
                                {
                                   "Ref":"DBNameParameter"
                                },
                                "'",
                                "; dbUserName = ",
                                "'",
                                {
                                   "Ref":"DBUserName"
                                },
                                "'",
                                "; dbPassword = ",
                                "'",
                                {
                                    "Fn::Join":[ "^|", { "Fn::Split": [ "|", { 
                                       "Fn::Join":[ "^\\", { "Fn::Split": [ "\\", { 
                                          "Fn::Join":[ "^&", { "Fn::Split": [ "&", { 
                                             "Fn::Join" : [ "^^", { "Fn::Split": [ "^", { "Ref":"DBPassword" } ]}] 
                                          }]}] 
                                       }]}]
                                    }]}]
                                },
                                "'",
                                "; appUserPassword = ",
                                "'",
                                {
                                    "Fn::Join":[ "^|", { "Fn::Split": [ "|", { 
                                       "Fn::Join":[ "^\\", { "Fn::Split": [ "\\", { 
                                          "Fn::Join":[ "^&", { "Fn::Split": [ "&", { 
                                             "Fn::Join" : [ "^^", { "Fn::Split": [ "^", { "Ref":"Password" } ]}] 
                                          }]}] 
                                       }]}]
                                    }]}]
                                },
                                "'",
                                 {{#allProducts}}
                                 "; {{name}}product = ",
                                 "'",
                                 {
                                    "Fn::If": [
                                    "is{{nameUpper}}Product",
                                    "{{nameToInstall}}",
                                    {
                                       "Ref":"AWS::NoValue"
                                    }
                                    ]
                                 }, "'",
                                 {{/allProducts}}
                                 "; awsStackName = ",
                                 "'",
                                 {
                                    "Ref":"AWS::StackName"
                                 }, "'",
                                 "; awsStackRegion = ",
                                 "'",
                                 {
                                    "Ref": "AWS::Region"
                                 }, "'",

                                "}"
                             ]
                          ]
                       },
                       "waitAfterCompletion":"60"
                    }
                  }
               }
            }
         },
         "Properties":{
            "InstanceType":{
               "Ref":"EC2InstanceTypeParameter"
            },
            "ImageId":{
               "Fn::If":[
                  "isWindow2016",
                  {
                     "Fn::FindInMap":[
                        "RegionMap",
                        {
                           "Ref":"AWS::Region"
                        },
                        "Windows2016"
                     ]
                  },
                  {
                     "Fn::FindInMap":[
                        "RegionMap",
                        {
                           "Ref":"AWS::Region"
                        },
                        "Windows2019"
                     ]
                  }
               ]
            },
            "SecurityGroupIds":[
               {
                  "Fn::If":[
                     "isScalabilityRequired",
                     {
                        "Ref":"EC2ScalabilitySecurityGroup"
                     },
                     {
                        "Ref":"NonScalableSecurityGroup"
                     }
                  ]
               }
            ],
            "KeyName":{
               "Ref":"KeyName"
            },
            "SubnetId":{
               "Ref":"Subnet"
            },
            "BlockDeviceMappings":[
               {
                  "DeviceName":"/dev/sda1",
                  "Ebs":{
                     "VolumeType":{
                        "Fn::If":[
                           "isVolumeTypeGP2",
                           "gp2",
                           "io1"
                        ]
                     },
                     "VolumeSize":{
                        "Ref":"VolumeSize"
                     },
                     "Iops":{
                        "Fn::If":[
                           "isVolumeTypeGP2",
                           {
                              "Ref":"AWS::NoValue"
                           },
                           1500
                        ]
                     }
                  }
               }
            ],
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "",
                     [
                        "<powershell>\n",
                        "Set-ExecutionPolicy Unrestricted -Force\n",
                        "cfn-init.exe -v -c config -s ",
                        {
                           "Ref":"AWS::StackId"
                        },
                        " -r EC2Instance",
                        " --region ",
                        {
                           "Ref":"AWS::Region"
                        },
                        "\n",
                        "</powershell>\n"
                     ]
                  ]
               }
            },
            "Tags": [
               {
                "Key": "Name",
                "Value": { "Ref": "AWS::StackName" }
               }
            ]
         }
      },
      "SolarWindsDatabase":{
         "Type":"AWS::RDS::DBInstance",
         "Condition":"isNewDatabase",
         "Properties":{
            "AllocatedStorage":{
               "Ref":"AllocatedStorage"
            },
            "DBInstanceClass":"db.m5.large",
            "Port":"1433",
            "StorageType":"gp2",
            "BackupRetentionPeriod": 7,
            "DBName":"",
            "DBSubnetGroupName": {
             "Ref": "DatabaseSubnetGroup"
           },
            "MasterUsername":{
               "Ref":"DBUserName"
            },
            "MasterUserPassword":{
               "Ref":"DBPassword"
            },
            "Engine":"sqlserver-se",
            "EngineVersion":"15.00.4043.16.v1",
            "LicenseModel":"license-included",
            "VPCSecurityGroups" : [ { "Ref" : "rdsDBSecurityGroup" }  ],
            "Tags": [
             {
              "Key": "Name",
              "Value": { "Ref": "AWS::StackName" }
             }
          ]
         }
      },

      "DatabaseSubnetGroup": {
       "Type": "AWS::RDS::DBSubnetGroup",
       "Condition": "isNewDatabase",
       "Properties": {
           "DBSubnetGroupDescription": "CloudFormation managed DB subnet group.",
           "SubnetIds": {
               "Ref": "DatabaseSubnets"
           },
           "Tags" : [
            {
               "Key" : "Name", 
               "Value" : { 
                  "Fn::Join" : ["", [
                     { "Ref": "AWS::StackName"}, 
                     "DatabaseSubnetGroup" ]]
               } 
            } 
        ]
       }
     
     },	
     "rdsDBSecurityGroup": {
       "Type": "AWS::EC2::SecurityGroup",
       "Condition": "isNewDatabase",
       "Properties": {
        "VpcId": {
           "Ref": "VPCID"
         },
         "SecurityGroupIngress": [
 
           {
             "Fn::If": [
               "isScalabilityRequired",
               {
                "IpProtocol":"tcp",
                "FromPort": 1433,
                "ToPort": 1433,
             "SourceSecurityGroupId": {
                   "Ref": "EC2ScalabilitySecurityGroup"
                 }
               },
               {
                "IpProtocol":"tcp",
                "FromPort": 1433,
                "ToPort": 1433,
             "SourceSecurityGroupId": {
                   "Ref": "NonScalableSecurityGroup"
                 }
               }
             ]
           }
         ],
         "SecurityGroupEgress": [
            {
                "IpProtocol": "-1",
                "CidrIp": "0.0.0.0/0"
            }
        ],
        "GroupDescription": "Enables database access from Orion server to RDS",
      
       "Tags" : [
         {
            "Key" : "Name", 
            "Value" : { 
               "Fn::Join" : ["", [
                  { "Ref": "AWS::StackName"}, 
                  "RdsDBSecurityGroup" ]]
            } 
         } 
     ]

       }
     }
 },
   "Mappings":{
      "RegionMap":{
         {{#regions}}
         "{{name}}":{
            "Windows2016":"{{ami2016}}",
            "Windows2019":"{{ami2019}}"
         }{{^last}},{{/last}}
         {{/regions}}
      }
   },
   "Conditions":{
      "isWindow2016":{
         "Fn::Equals":[
            {
               "Ref":"WindowOSTypeParameter"
            },
            "Windows Server 2016 Datacenter"
         ]
      },
      "isScalabilityRequired":{
         "Fn::Equals":[
            {
               "Ref":"SupportScalability"
            },
            "Yes (This will enable TCP ports 1801, 5671 and 17777 by default)"
         ]
      },
      "ScalabilityNotRequired":{
         "Fn::Equals":[
            {
               "Ref":"SupportScalability"
            },
            "No"
         ]
      },
      "isVolumeTypeGP2":{
         "Fn::Equals":[
            {
               "Ref":"VolumeParameterType"
            },
            "gp2 (General purpose SSD volume that balances price and performance for a wide variety of workloads)"
         ]
      },
      "isExistingDatabase":{
         "Fn::Equals":[
            {
               "Ref":"DBInstallationTypeParameter"
            },
            "Option 2: Use an existing database"
         ]
      },
      "isNewDatabase":{
         "Fn::Equals":[
            {
               "Ref":"DBInstallationTypeParameter"
            },
            "Option 1: Create a new database"
         ]
      },
      {{#allProducts}}
      "is{{nameUpper}}Product": {
         "Fn::Equals": [
           {
             "Ref": "{{nameUpper}}Product"
           },
           "Yes"
         ]
       }{{^last}},{{/last}}
      {{/allProducts}}
   },
   "Rules":{
      "rule1":{
         "RuleCondition":{
            "Fn::Equals":[
               {
                  "Ref":"DBInstallationTypeParameter"
               },
               "Option 2: Use an existing database"
            ]
         },
         "Assertions":[
            {
               "Assert":{
                  "Fn::Not":[
                     {
                        "Fn::Equals":[
                           "Please enter a Fully Qualified Domain Name (FQDN) of SQL Server",
                           {
                              "Ref":"DBServerNameParameter"
                           }
                        ]
                     }
                  ]
               },
               "AssertDescription":"Please enter a Fully Qualified Domain Name (FQDN) of SQL Server."
            }
         ]
      },
      "SubnetsInVPC":{
         "Assertions":[
            {
               "Assert":{
                  "Fn::EachMemberIn":[
                     {
                        "Fn::ValueOfAll":[
                           "AWS::EC2::Subnet::Id",
                           "VpcId"
                        ]
                     },
                     {
                        "Fn::RefAll":"AWS::EC2::VPC::Id"
                     }
                  ]
               },
               "AssertDescription":"All subnets must be in the same VPC."
            }
         ]
      }
   },
   "Outputs":{
      "OrionServerUrl":{
         "Description":"The HTTPS endpoint of the Orion Server",
         "Value":{
            "Fn::Join":[
               "",
               [
                  "https://",
                  {
                     "Fn::GetAtt":[
                        "EC2Instance",
                        "PublicDnsName"
                     ]
                  },
                  "/Orion"
               ]
            ]
         }
      }
   }
 }
